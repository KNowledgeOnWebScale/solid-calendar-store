{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@solid/community-server/^6.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/solid-calendar-store/^0.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@rmlio/solid-rml-store/^0.0.0/components/context.jsonld",
    {
      "solid-calendar-store": "urn:solid-calendar-store:default:",
      "solid-server": "urn:solid-server:default:",
      "my": "urn:example:"
    }
  ],
  "import": [
    "css:config/app/main/default.json",
    "css:config/app/init/default.json",
    "css:config/app/setup/required.json",
    "css:config/app/variables/default.json",
    "css:config/http/handler/default.json",
    "css:config/http/middleware/http.json",
    "css:config/http/notifications/websockets.json",
    "css:config/http/server-factory/http.json",
    "css:config/http/static/default.json",
    "css:config/identity/access/public.json",
    "css:config/identity/email/default.json",
    "css:config/identity/handler/default.json",
    "css:config/identity/ownership/token.json",
    "css:config/identity/pod/static.json",
    "css:config/identity/registration/enabled.json",
    "css:config/ldp/authentication/dpop-bearer.json",
    "css:config/ldp/authorization/webacl.json",
    "css:config/ldp/handler/default.json",
    "css:config/ldp/metadata-parser/default.json",
    "css:config/ldp/metadata-writer/default.json",
    "css:config/ldp/modes/default.json",
    "css:config/storage/key-value/resource-store.json",
    "css:config/storage/middleware/default.json",
    "css:config/util/auxiliary/acl.json",
    "css:config/util/identifiers/suffix.json",
    "css:config/util/index/default.json",
    "css:config/util/logging/winston.json",
    "css:config/util/representation-conversion/default.json",
    "css:config/util/resource-locker/memory.json",
    "css:config/util/variables/default.json",
    "css:config/storage/backend/data-accessors/file.json"
  ],
  "@graph": [
    {
      "comment": "A single-pod server that stores its resources on disk."
    },
    {
      "@id": "urn:solid-server:default:ResourceStore_Backend",
      "@type": "RoutingResourceStore",
      "rule": {
        "@id": "my:RouterRule"
      }
    },
    {
      "@id": "my:RouterRule",
      "@type": "RegexRouterRule",
      "base": {
        "@id": "solid-server:variable:baseUrl"
      },
      "rules": [
        {
          "@type": "RegexRouterRule",
          "regex": "^/availability$",
          "store": {
            "@id": "my:AvailabilityStore"
          }
        },
        {
          "@type": "RegexRouterRule",
          "comment": "Send everything else to file store",
          "regex": "^/(?!availability$).*",
          "store": {
            "@id": "urn:solid-server:default:FileResourceStore"
          }
        }
      ]
    },
    {
      "@id": "urn:solid-server:default:FileResourceStore",
      "@type": "DataAccessorBasedStore",
      "identifierStrategy": {
        "@id": "urn:solid-server:default:IdentifierStrategy"
      },
      "auxiliaryStrategy": {
        "@id": "urn:solid-server:default:AuxiliaryStrategy"
      },
      "accessor": {
        "@id": "urn:solid-server:default:FileDataAccessor"
      },
      "metadataStrategy": {
        "@id": "solid-server:MetadataStrategy"
      }
    },
    {
      "@id": "my:PersonalGoogleCalendar",
      "@type": "RepresentationConvertingStore",
      "RepresentationConvertingStore:_source": {
        "@type": "HttpGetStore",
        "HttpGetStore:_options_url": "**CALENDAR_URL**"
      },
      "RepresentationConvertingStore:_options_outConverter": {
        "@id": "my:RepresentationConverter"
      }
    },
    {
      "@id": "my:AvailabilityStore",
      "@type": "RepresentationConvertingStore",
      "RepresentationConvertingStore:_source": {
        "@type": "AvailabilityStore",
        "source": {
          "@id": "my:PersonalGoogleCalendar"
        },
        "options_settingsPath": "availability-store-settings.yaml",
        "options_baseUrl": "http://example.com/",
        "options_name": "Availability of **YOUR_NAME**"
      },
      "RepresentationConvertingStore:_options_outConverter": {
        "@id": "my:RepresentationConverter"
      }
    },
    {
      "@id": "my:RepresentationConverter",
      "@type": "ChainedConverter",
      "converters": [
        {
          "@id": "my:json-to-rdf-converter"
        },
        {
          "@id": "my:IcsToJsonConverter"
        },
        {
          "@id": "my:JsonToIcsConverter"
        }
      ]
    },
    {
      "@id": "my:RdfRepresentationConverter",
      "@type": "ChainedConverter",
      "converters": [
        {
          "@id": "my:IcsToJsonConverter"
        },
        {
          "@id": "my:json-to-rdf-converter"
        }
      ]
    },
    {
      "@id": "my:IcsToJsonConverter",
      "@type": "IcsToJsonConverter"
    },
    {
      "@id": "my:JsonToIcsConverter",
      "@type": "JsonToIcsConverter"
    },
    {
      "@id": "my:json-to-rdf-converter",
      "@type": "AnyToRdfConverter",
      "rmlRulesPath": "events.rml.ttl",
      "rmlmapperPath": "./rmlmapper.jar"
    }
  ]
}
